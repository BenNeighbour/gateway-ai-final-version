name: 'Run tests'
on:
  pull_request:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Install Node'
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - uses: oven-sh/setup-bun@v1
      - name: Setup PNPM
        uses: ./.github/actions/pnpm
      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          # Should match the `DENO_VERSION_RANGE` from https://github.com/netlify/edge-bundler/blob/main/node/bridge.ts#L17
          deno-version: v1.37.0
      - name: 'Install dependencies'
        run: npm ci
      - name: 'Netlify Login'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
        run: |
          npm i -g netlify-cli
          netlify login
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "::set-output name=version::$(npm view @playwright/test version)"
      - uses: actions/cache@v3
        id: playwright-cache
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run e2e:ci
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        shard: [1/8, 2/8, 3/8, 4/8, 5/8, 6/8, 7/8, 8/8]
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: 'Install Node'
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Setup PNPM
        uses: ./.github/actions/pnpm
      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          # Should match the `DENO_VERSION_RANGE` from https://github.com/netlify/edge-bundler/blob/e55f825bd985d3c92e21d1b765d71e70d5628fba/node/bridge.ts#L17
          deno-version: v1.37.0
      - name: 'Install dependencies'
        run: npm ci
      - name: 'Build'
        run: npm run build
      - name: 'Netlify Login'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
        run: |
          npm i -g netlify-cli
          netlify login
      - name: Compute Fixtures Cache Key
        id: fixture-cache-key
        # Fixtures only need to be rebuilt if anything in the tests/fixtures directory changes,
        # so we're using a hash of the files in that directory as the cache key.
        run:
          echo "key=$(git ls-files -s tests/fixtures/ tests/prepare.mjs | git hash-object --stdin)"
          >> "$GITHUB_OUTPUT"
        shell: bash
      - name: Cache Fixtures
        id: cache-fixtures
        uses: actions/cache@v4
        with:
          path: tests/fixtures
          key: integration-fixtures-${{ runner.os }}-${{ steps.fixture-cache-key.outputs.key }}
      - name: 'Prepare Fixtures'
        if: steps.cache-fixtures.outputs.cache-hit != 'true'
        run: npm run pretest
      - name: 'Test'
        run: npm run test:ci -- --shard=${{ matrix.shard }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
