name: run e2e tests

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

env:
  NODE_VERSION: 18.16.1
  PNPM_VERSION: 8.7.1
  NEXT_REPO: netlify/next.js
  NEXT_VERSION: netlify-testing
  NEXT_TEST_MODE: deploy
  NEXT_E2E_TEST_TIMEOUT: 600000
  NEXT_TEST_JOB: true
  TEST_CONCURRENCY: 8
  NEXT_TELEMETRY_DISABLED: 1
  NEXT_SKIP_NATIVE_POSTINSTALL: 1
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: 1d5a5c76-d445-4ae5-b694-b0d3f2e2c395
  NEXT_TEST_CONTINUE_ON_ERROR: 1

jobs:
  test-e2e:
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'run-e2e-tests') }}
    name: test e2e
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5]
    env:
      next-path: next.js
      runtime-path: next-runtime-minimal
      skipped-tests: |
        test/e2e/app-dir/app-compilation/index.test.ts
        test/e2e/favicon-short-circuit/favicon-short-circuit.test.ts

    steps:
      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2.1.0
      - name: get github token
        uses: navikt/github-app-token-generator@v1
        id: token
        with:
          private-key: ${{ secrets.TOKENS_PRIVATE_KEY }}
          app-id: ${{ secrets.TOKENS_APP_ID }}
          repo: ${{ env.NEXT_REPO }}

      - name: checkout next.js repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.NEXT_REPO }}
          token: ${{ steps.token.outputs.token }}
          ref: ${{ env.NEXT_VERSION }}
          path: ${{ env.next-path }}

      - name: checkout runtime repo
        uses: actions/checkout@v4
        with:
          path: ${{ env.runtime-path }}

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: setup pnpm/yarn
        run: corepack enable

      - name: get pnpm store
        id: pnpm-store
        run: echo "PATH=$(pnpm store path --silent)" >> ${GITHUB_OUTPUT}

      - name: cache pnpm deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.PATH }}
          key: pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: get npm cache
        id: npm-cache
        run: echo "PATH=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: cache npm deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.PATH }}
          key: node-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-cache-

      - name: install next.js
        run: pnpm install
        working-directory: ${{ env.next-path }}

      - name: build next.js
        run: pnpm build
        working-directory: ${{ env.next-path }}

      - name: install runtime
        run: npm install --ignore-scripts
        working-directory: ${{ env.runtime-path }}

      - name: build runtime
        run: npm run build
        working-directory: ${{ env.runtime-path }}

      - name: add netlify cli
        run: npm install -g netlify-cli

      - name: set test filter
        run: |
          ls test/e2e/**/*.test.* > included_tests
          printf %s "${{ env.skipped-tests }}" > skipped_tests
          comm -23 included_tests skipped_tests > filtered_tests
          echo "{\"enabledTests\":[\"$(printf %s "$(< filtered_tests)" | sed -z "s/\n/\",\"/g")\"]}" > tests.json
        working-directory: ${{ env.next-path }}

      - name: run tests
        env:
          NODE_ENV: production
          NEXT_EXTERNAL_TESTS_FILTERS: ./tests.json
        run: node run-tests.js -g ${{ matrix.group }}/5 -c ${TEST_CONCURRENCY} --type e2e
        working-directory: ${{ env.next-path }}
      - name: Test results
        working-directory: ${{ env.next-path }}
        run: |
          for file in `ls test/e2e/**/*.results.json`; do
            test_name=$(echo $file | sed -e 's/test\/e2e\/\(.*\/.*\).results.json/\1/')
            echo "<details>" >> $GITHUB_STEP_SUMMARY
            echo "<summary>:x: Test failed: <code>${test_name}</code></summary>" >> $GITHUB_STEP_SUMMARY
            echo "<pre><code>" >> $GITHUB_STEP_SUMMARY
            cat $file | jq -r '.testResults[].message'>> $GITHUB_STEP_SUMMARY
            echo "</code></pre>" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
            failed=true
          done
          if [ "$failed" = true ] ; then
            echo "Failed tests. Please see action summary for details."
            exit 1
          fi
