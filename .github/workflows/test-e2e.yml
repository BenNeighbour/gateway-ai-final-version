name: run e2e tests

on:
  workflow_dispatch:

env:
  NODE_VERSION: 18.16.1
  PNPM_VERSION: 8.7.1
  NEXT_REPO: netlify/next.js
  NEXT_VERSION: netlify-testing
  NEXT_TEST_MODE: deploy
  TEST_CONCURRENCY: 8
  NEXT_TELEMETRY_DISABLED: 1
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_BOT_AUTH_TOKEN }}
  NETLIFY_SITE_ID: 1d5a5c76-d445-4ae5-b694-b0d3f2e2c395

jobs:
  test-e2e:
    name: test e2e
    runs-on: ubuntu-latest
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5]
    env:
      next-path: next.js
      runtime-path: next-runtime-minimal
      skipped-tests: |
        test/e2e/app-dir/app-compilation/index.test.ts
        test/e2e/favicon-short-circuit/favicon-short-circuit.test.ts

    steps:
      - name: get github token
        uses: navikt/github-app-token-generator@v1
        id: token
        with:
          private-key: ${{ secrets.TOKENS_PRIVATE_KEY }}
          app-id: ${{ secrets.TOKENS_APP_ID }}
          repo: ${{ env.NEXT_REPO }}

      - name: checkout next repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.NEXT_REPO }}
          token: ${{ steps.token.outputs.token }}
          ref: ${{ env.NEXT_VERSION }}
          path: ${{ env.next-path }}

      - name: checkout runtime repo
        uses: actions/checkout@v3
        with:
          path: ${{ env.runtime-path }}

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: setup pnpm/yarn
        run: corepack enable

      - name: get pnpm store
        id: pnpm-store
        run: echo "PATH=$(pnpm store path --silent)" >> ${GITHUB_OUTPUT}

      - name: cache pnpm deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-store.outputs.PATH }}
          key: pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-

      - name: get npm cache
        id: npm-cache
        run: echo "PATH=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: cache npm deps
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.PATH }}
          key: node-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-cache-

      - name: install next.js
        run: pnpm install
        working-directory: ${{ env.next-path }}

      - name: build next.js
        run: pnpm build
        working-directory: ${{ env.next-path }}

      - name: install runtime
        run: npm install
        working-directory: ${{ env.runtime-path }}

      - name: build runtime
        run: npm run build
        working-directory: ${{ env.runtime-path }}

      - name: add netlify cli
        run: npm install -g netlify-cli
          
      - name: set test filter
        run: |
          ls test/e2e/**/*.test.* > included_tests
          printf %s "${{ env.skipped-tests }}" > skipped_tests
          comm -23 included_tests skipped_tests > filtered_tests
          echo "{\"enabledTests\":[\"$(printf %s "$(< filtered_tests)" | sed -z "s/\n/\",\"/g")\"]}" > tests.json
        working-directory: ${{ env.next-path }}

      - name: run tests
        env:
          NODE_ENV: production
          NEXT_EXTERNAL_TESTS_FILTERS: ./tests.json
        run: node run-tests.js -g ${{ matrix.group }}/5 -c ${TEST_CONCURRENCY} --type e2e
        working-directory: ${{ env.next-path }}

  validate-tests:
    name: validate tests
    needs: [test-e2e]
    runs-on: ubuntu-latest
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')) }}
